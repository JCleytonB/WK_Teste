unit Comum.Model.Pessoa;

interface

uses Comum.Model.Default, System.Math;

type

  TPessoa = class(Comum.Model.Default.TDefault)
  private
    FNMPrimeiro : String;
    FDTRegistro : TDate;
    FNMSegundo  : String;
    FDSDocumento: String;
    FIDPessoa   : Integer;
    FFLNatureza : Integer;
    procedure SetIDPessoa(const Value: Integer);
    function GetIDPessoa: Integer;
  public
    constructor Create;
    property IDPessoa   : Integer read GetIDPessoa  write SetIDPessoa default 0;
    property FLNatureza : Integer read FFLNatureza  write FFLNatureza;
    property DSDocumento: String  read FDSDocumento write FDSDocumento;
    property NMPrimeiro : String  read FNMPrimeiro  write FNMPrimeiro;
    property NMSegundo  : String  read FNMSegundo   write FNMSegundo;
    property DTRegistro : TDate   read FDTRegistro  write FDTRegistro;
  end;

implementation

uses
  Vcl.Dialogs, System.SysUtils;

{ TPessoa }

constructor TPessoa.Create;
begin
  FIDPessoa    := ZeroValue;
  FFLNatureza  := ZeroValue;
  FDSDocumento := EmptyStr;
  FNMPrimeiro  := EmptyStr;
  FNMSegundo   := EmptyStr;
end;

function TPessoa.GetIDPessoa: Integer;
begin
  Result := FIDPessoa;
end;

procedure TPessoa.SetIDPessoa(const Value: Integer);
begin
  if Value <= ZeroValue then
    ShowMessage('O Campo ID Pessoa, só aceita números inteiros positivos!');
  FIDPessoa := Value;
end;

end.
